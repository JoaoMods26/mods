task.spawn(function()
    repeat task.wait() until game:IsLoaded()
    repeat task.wait() until _G.AimbotTab

    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")
    local Camera = workspace.CurrentCamera
    local LocalPlayer = Players.LocalPlayer
    local AimbotTab = _G.AimbotTab

    local AimbotSettings = {
        Enabled = false,
        ESPEnabled = false,
        FOVRadius = 350,
        FOVColor = Color3.fromRGB(0, 0, 255),
        ESPColor = Color3.fromRGB(0, 0, 255),
        ESPSizeMultiplier = 5,
        Sensitivity = 0,
        AimPart = "Head",
        TeamCheckEnabled = false,
        TracersEnabled = false,
        TracerColor = Color3.fromRGB(0, 0, 255),
        AutoAimEnabled = false,
        OnlyClosePlayers = false,
        CloseDistanceThreshold = 100,
        WallCheck = false,
    }

    local Holding = false

    local FOVCircle = Drawing.new("Circle")
    FOVCircle.Filled = false
    FOVCircle.Thickness = 1
    FOVCircle.NumSides = 64
    FOVCircle.Transparency = 0.7
    FOVCircle.Visible = false

    local function GetClosestPlayer()
        local closestPlayer, shortestDistance = nil, math.huge
        for _, v in pairs(Players:GetPlayers()) do
            if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                if AimbotSettings.TeamCheckEnabled and v.Team == LocalPlayer.Team then continue end
                local targetPos = v.Character.HumanoidRootPart.Position
                if AimbotSettings.WallCheck then
                    local result = workspace:Raycast(Camera.CFrame.Position, targetPos - Camera.CFrame.Position, RaycastParams.new())
                    if result and result.Instance and not v.Character:IsAncestorOf(result.Instance) then continue end
                end
                local screenPoint, onScreen = Camera:WorldToViewportPoint(targetPos)
                if onScreen then
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - UserInputService:GetMouseLocation()).Magnitude
                    local distFromPlayer = (targetPos - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if distance < shortestDistance and distance < AimbotSettings.FOVRadius then
                        if AimbotSettings.OnlyClosePlayers and distFromPlayer > AimbotSettings.CloseDistanceThreshold then continue end
                        shortestDistance = distance
                        closestPlayer = v
                    end
                end
            end
        end
        return closestPlayer
    end

    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            Holding = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            Holding = false
        end
    end)

    local ESPBoxes, Lines = {}, {}

    RunService.RenderStepped:Connect(function()
        -- FOV
        FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y - 36)
        FOVCircle.Radius = AimbotSettings.FOVRadius
        FOVCircle.Color = AimbotSettings.FOVColor
        FOVCircle.Visible = (Holding or AimbotSettings.AutoAimEnabled) and AimbotSettings.Enabled

        -- Aimbot
        if AimbotSettings.Enabled and (Holding or AimbotSettings.AutoAimEnabled) then
            local target = GetClosestPlayer()
            if target and target.Character and target.Character:FindFirstChild(AimbotSettings.AimPart) then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Character[AimbotSettings.AimPart].Position)
            end
        end

        -- ESP
        for _, box in pairs(ESPBoxes) do if box and box.Remove then box:Remove() end end
        ESPBoxes = {}
        if AimbotSettings.ESPEnabled then
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                    if AimbotSettings.TeamCheckEnabled and v.Team == LocalPlayer.Team then continue end
                    local hrp = v.Character.HumanoidRootPart
                    local rootPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    if onScreen then
                        local dist = (hrp.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        local scale = 1 / (hrp.Position - Camera.CFrame.Position).Magnitude * 100
                        local h = math.clamp(6 * scale * AimbotSettings.ESPSizeMultiplier, 2, 500)
                        local w = h / 1.5
                        local box = Drawing.new("Square")
                        box.Color = (AimbotSettings.OnlyClosePlayers and dist <= AimbotSettings.CloseDistanceThreshold) and Color3.fromRGB(255, 0, 0) or AimbotSettings.ESPColor
                        box.Thickness, box.Filled, box.Transparency = 1, false, 1
                        box.Size = Vector2.new(w, h)
                        box.Position = Vector2.new(rootPos.X - w/2, rootPos.Y - h/2)
                        box.Visible = true
                        table.insert(ESPBoxes, box)
                    end
                end
            end
        end

        -- Tracers
        for _, l in pairs(Lines) do if l and l.Remove then l:Remove() end end
        Lines = {}
        if AimbotSettings.TracersEnabled then
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 then
                    if AimbotSettings.TeamCheckEnabled and v.Team == LocalPlayer.Team then continue end
                    local hrp = v.Character.HumanoidRootPart
                    local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    if onScreen then
                        local dist = (hrp.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        local line = Drawing.new("Line")
                        line.Thickness = 1.5
                        line.Transparency = 0.9
                        line.Color = (AimbotSettings.OnlyClosePlayers and dist <= AimbotSettings.CloseDistanceThreshold) and Color3.fromRGB(255, 0, 0) or AimbotSettings.TracerColor
                        line.From = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)
                        line.To = Vector2.new(screenPos.X, screenPos.Y)
                        line.Visible = true
                        table.insert(Lines, line)
                    end
                end
            end
        end
    end)

    -- UI Toggles
    local rainbowEnabled = false
    local rainbowSpeed = 5

    local function GetRainbowColor()
        return Color3.fromHSV((tick() * rainbowSpeed) % 1, 1, 1)
    end

    AimbotTab:CreateToggle({ Name = "Aimbot", CurrentValue = false, Callback = function(v) AimbotSettings.Enabled = v end })
    AimbotTab:CreateToggle({ Name = "Auto Apuntar", CurrentValue = false, Callback = function(v) AimbotSettings.AutoAimEnabled = v end })
    AimbotTab:CreateSlider({ Name = "Tamaño del FOV", Range = {10, 1000}, Increment = 1, CurrentValue = AimbotSettings.FOVRadius, Callback = function(v) AimbotSettings.FOVRadius = v end })
    AimbotTab:CreateColorPicker({ Name = "Color del FOV", Color = AimbotSettings.FOVColor, Callback = function(v) AimbotSettings.FOVColor = v end })
    AimbotTab:CreateToggle({ Name = "ESP", CurrentValue = false, Callback = function(v) AimbotSettings.ESPEnabled = v end })
    AimbotTab:CreateColorPicker({ Name = "Color del ESP", Color = AimbotSettings.ESPColor, Callback = function(v) AimbotSettings.ESPColor = v end })
    AimbotTab:CreateSlider({ Name = "Tamaño del ESP", Range = {1, 10}, Increment = 0.1, CurrentValue = AimbotSettings.ESPSizeMultiplier, Callback = function(v) AimbotSettings.ESPSizeMultiplier = v end })
    AimbotTab:CreateToggle({ Name = "No apuntar al Team", CurrentValue = false, Callback = function(v) AimbotSettings.TeamCheckEnabled = v end })
    AimbotTab:CreateToggle({ Name = "Mostrar Líneas (Tracers)", CurrentValue = false, Callback = function(v) AimbotSettings.TracersEnabled = v end })
    AimbotTab:CreateColorPicker({ Name = "Color de las Líneas (Tracers)", Color = AimbotSettings.TracerColor, Callback = function(v) AimbotSettings.TracerColor = v end })
    AimbotTab:CreateToggle({ Name = "Apuntar a jugadores cercanos", CurrentValue = false, Callback = function(v) AimbotSettings.OnlyClosePlayers = v end })
    AimbotTab:CreateSlider({ Name = "Distancia", Range = {1, 300}, Increment = 1, CurrentValue = AimbotSettings.CloseDistanceThreshold, Callback = function(v) if AimbotSettings.OnlyClosePlayers then AimbotSettings.CloseDistanceThreshold = v end end })
    AimbotTab:CreateToggle({ Name = "Rainbow", CurrentValue = false, Callback = function(v) rainbowEnabled = v end })
    AimbotTab:CreateSlider({ Name = "Rainbow", Range = {0, 20}, Increment = 0.1, CurrentValue = rainbowSpeed, Callback = function(v) rainbowSpeed = v end })

    RunService.RenderStepped:Connect(function()
        if rainbowEnabled then
            AimbotSettings.FOVColor = GetRainbowColor()
            AimbotSettings.ESPColor = GetRainbowColor()
            AimbotSettings.TracerColor = GetRainbowColor()
        end
    end)
end)
